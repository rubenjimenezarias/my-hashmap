#BlueJ class context
comment0.params=
comment0.target=MyHashMap()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ MyHashMap\r\n
comment1.params=clave\ contenido
comment1.target=int\ put(java.lang.String,\ int)
comment1.text=\r\n\ Asociamos\ una\ clave\ con\ un\ contenido\ a\ la\ siguiente\ posicion\r\n\ \r\n\ @clave\ String\ de\ la\ clave\r\n\ @contenido\ int\ \r\n
comment2.params=clave
comment2.target=int\ get(java.lang.String)
comment2.text=\r\n\ Devuelve\ el\ contenido\ de\ la\ clave\ que\ indiquemos\r\n\ @clave\ String\ clave\ del\ contenido\r\n
comment3.params=
comment3.target=boolean\ isEmpty()
comment3.text=\r\n\ Devuelve\ un\ boolean\ dependiendo\ si\ la\ lista\ esta\ llena\ o\ vacia\r\n
comment4.params=
comment4.target=int\ size()
comment4.text=\r\n\ Devuelve\ el\ numero\ de\ elementos\ de\ la\ lista\r\n
comment5.params=clave
comment5.target=int\ remove(java.lang.String)
comment5.text=\r\n\ Borra\ un\ elemento\ con\ la\ clave\ que\ indiquemos\ y\ devuelve\ su\ valor\r\n\ Si\ no\ hay\ ese\ elemento\ devuelve\ -1\r\n
comment6.params=
comment6.target=void\ clear()
comment6.text=\r\n\ Vacia\ las\ dos\ listas.\r\n
comment7.params=clave
comment7.target=boolean\ containsKey(java.lang.String)
comment7.text=\r\n\ Devuelve\ true\ o\ false\ segun\ si\ contiene\ la\ clave\ que\ le\ indicamos\r\n\ @clave\ String\ clave\ del\ contenido\r\n
comment8.params=valor
comment8.target=boolean\ containsValue(int)
comment8.text=\r\n\ Devuelve\ true\ o\ false\ segun\ si\ la\ lista\ contine\ el\ contenidos\ que\ le\ indicamos\r\n\ @contenido\ int\ contenido\ de\ la\ clave\r\n
numComments=9
